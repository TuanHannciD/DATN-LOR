@using AuthDemo.Models;
@{
    ViewData["Title"] = "Giỏ Hàng";
    Layout = "~/Views/Shared/_LayoutCart.cshtml";
}

@model List<ChiTietGioHang>

<style>
    /* Hide number input arrows for Chrome, Safari, Edge */
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Hide number input arrows for Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }

    /* Style for out-of-stock items */
    .out-of-stock {
        opacity: 0.6;
        pointer-events: none;
        background: #F5F5F5;
    }

        .out-of-stock .remove-link {
            pointer-events: auto;
            opacity: 1;
            cursor: pointer;
        }

    /* Custom hover effects for table rows */
    .cart-row:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(255, 107, 107, 0.15);
        transition: all 0.3s cubic-bezier(0.25, 1, 0.5, 1);
    }

    /* Style for quantity buttons */
    .quantity-btn {
        background: linear-gradient(90deg, #FF6B6B, #FF9292);
        color: white;
        transition: all 0.3s ease;
    }

        .quantity-btn:hover {
            background: linear-gradient(90deg, #FF3D3D, #FF6B6B);
            transform: scale(1.1);
        }

    /* Checkbox styling */
    .custom-checkbox {
        width: 20px;
        height: 20px;
        accent-color: #FF6B6B;
        cursor: pointer;
    }

    /* Alert animation */
    .alert {
        animation: fadeIn 0.5s ease-out;
    }
</style>

<!-- Dream background elements for cart page -->
<div class="dream-element" style="width:200px; height:200px; background:#FFE8E8; top:10%; left:5%; animation: dreamFloat 12s ease-in-out infinite;"></div>
<div class="dream-element" style="width:150px; height:150px; background:#C1E3FF; bottom:15%; right:10%; animation: dreamFloat 15s ease-in-out infinite reverse;"></div>

<section class="py-24 bg-primary-50 relative">
    <div class="container mx-auto px-6">
        <!-- Alert for cart warnings -->
        @if (TempData["CartWarnings"] != null)
        {
            <div class="alert alert-warning alert-dismissible fade show mx-auto mt-3 rounded-2xl dream-shadow max-w-2xl bg-gradient-to-r from-yellow-100 to-yellow-200 border border-yellow-300 p-4" role="alert">
                <span class="text-lg font-semibold text-yellow-800">
                    @Html.Raw(TempData["CartWarnings"])
                </span>
                <button type="button" class="close text-yellow-700 opacity-75 hover:opacity-100 ml-4" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        <form method="post" action="@Url.Action("CheckOut", "HoaDon")" id="checkoutForm" class="mt-8">
            @Html.AntiForgeryToken()

            <div class="bg-white rounded-2xl dream-shadow p-8">
                <h2 class="text-3xl font-serif font-bold text-primary-900 mb-6 bg-gradient-to-r from-accent-600 to-accent-400 gradient-text">Giỏ Hàng Của Bạn</h2>
                <div class="overflow-x-auto">
                    <table class="w-full table-auto">
                        <thead>
                            <tr class="bg-primary-100 text-primary-800 text-left">
                                <th class="p-4">
                                    <input type="checkbox" id="chon-tat-ca" class="custom-checkbox" />
                                </th>
                                <th class="p-4 font-medium">Sản Phẩm</th>
                                <th class="p-4 font-medium">Đơn Giá</th>
                                <th class="p-4 font-medium">Số Lượng</th>
                                <th class="p-4 font-medium">Tổng</th>
                                <th class="p-4"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                decimal tong = item.SoLuong * item.ChiTietGiay.Gia;
                                bool hetHang = item.ChiTietGiay.SoLuong == 0 
                                             || item.ChiTietGiay.IsDelete == true;
                                var imageUrl = item.ChiTietGiay.AnhGiays?.FirstOrDefault()?.DuongDanAnh;
                                <tr class="cart-row border-b border-primary-200 @(hetHang ? "out-of-stock" : "")" style="transition: all 0.3s ease;">
                                    <td class="p-4">
                                        <input type="checkbox"
                                               name="selectedIds"
                                               value="@item.ShoeDetailID"
                                               class="chon-sp custom-checkbox"
                                               data-price="@item.ChiTietGiay.Gia"
                                               data-id="@item.ShoeDetailID"
                                        @(hetHang ? "disabled" : "") />
                                    </td>
                                    <td class="p-4">

                                        <div class="flex items-center space-x-4">
                                            <a asp-controller="Home"
                                               asp-action="SanPhamDetails"
                                               asp-route-id="@item.ChiTietGiay.Giay.ShoeID"
                                               class="block">
                                                <img src="@imageUrl"
                                                     alt="@item.ChiTietGiay.Giay.TenGiay"
                                                     class="w-20 h-20 object-cover rounded-lg dream-shadow hover:scale-105 transition-transform duration-300" />
                                                
                                                <div>
                                                    <h5 class="font-medium text-primary-900 hover:text-accent-600 transition">
                                                        @item.ChiTietGiay.Giay.TenGiay
                                                    </h5>
                                                    <p class="text-sm text-primary-500">
                                                        (@item.ChiTietGiay.MauSac.TenMau, @item.ChiTietGiay.KichThuoc.TenKichThuoc)
                                                    </p>
                                                    @if (hetHang)
                                                    {
                                                        <div class="text-accent-600 text-sm font-medium">Hết hàng</div>
                                                    }
                                                </div>
                                            </a>
                                        </div>
                                    </td>
                                    <td class="p-4 text-primary-900">@item.ChiTietGiay.Gia.ToString("N0", new System.Globalization.CultureInfo("vi-VN")) ₫</td>
                                    <td class="p-4">
                                        <div class="flex items-center space-x-2">
                                            <button type="button"
                                                    class="btn-decrease quantity-btn w-10 h-10 rounded-full flex items-center justify-center"
                                                    data-id="@item.ShoeDetailID"
                                            @(hetHang ? "disabled" : "")>
                                                −
                                            </button>
                                            <input type="number"
                                                   value="@item.SoLuong"
                                                   min="1"
                                                   max="@item.ChiTietGiay.SoLuong"
                                                   data-for-id="@item.ShoeDetailID"
                                                   data-stock="@item.ChiTietGiay.SoLuong"
                                                   class="quantity-input form-control text-center w-16 h-10 rounded-full border border-primary-300 focus:outline-none focus:ring-2 focus:ring-accent-500 text-primary-900"
                                            @(hetHang ? "readonly" : "") />
                                            <button type="button"
                                                    class="btn-increase quantity-btn w-10 h-10 rounded-full flex items-center justify-center"
                                                    data-id="@item.ShoeDetailID"
                                            @(hetHang ? "disabled" : "")>
                                                +
                                            </button>
                                        </div>
                                    </td>
                                    <td class="p-4 text-primary-900 shoping__cart__total">@tong.ToString("N0", new System.Globalization.CultureInfo("vi-VN")) ₫</td>
                                    <td class="p-4">
                                        <a asp-controller="Cart"
                                           asp-action="RemoveCart"
                                           asp-route-id="@item.CartDetailID"
                                           class="remove-link text-accent-600 hover:text-accent-800 transition">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="mt-8 flex flex-col sm:flex-row justify-between items-center gap-6">
                    <a asp-controller="Shop" asp-action="Index"
                       class="inline-flex items-center bg-white border-2 border-accent-500 text-accent-600 px-6 py-3 rounded-full font-medium hover:bg-accent-100 hover:border-accent-600 transition dream-shadow">
                        Tiếp Tục Mua Sắm <i class="fas fa-arrow-right ml-2"></i>
                    </a>
                    <div class="text-right">
                        <h5 class="text-lg font-medium text-primary-900">Tổng Tiền</h5>
                        <p class="text-2xl font-bold text-accent-600" id="tong-tien">0 VNĐ</p>
                        <button type="submit"
                                class="mt-4 inline-flex items-center bg-gradient-to-r from-accent-600 to-accent-400 text-white px-8 py-3 rounded-full font-medium hover:from-accent-700 hover:to-accent-500 transition dream-shadow">
                            Tiến Hành Thanh Toán <i class="fas fa-arrow-right ml-2"></i>
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>

@section Scripts {
    <script>
        // 1. chọn all checkbox
        document.getElementById("chon-tat-ca").addEventListener("change", function () {
            const checkAll = this.checked;
            document.querySelectorAll(".chon-sp:not([disabled])").forEach(cb => {
                cb.checked = checkAll;
            });
            updateTotal();
        });

        // 2. cập nhật lại tổng khi checkbox
        document.querySelectorAll(".chon-sp").forEach(cb => {
            cb.addEventListener("change", updateTotal);
        });

        function updateTotal() {
            let total = 0;
            document.querySelectorAll(".chon-sp:checked").forEach(cb => {
                const price = parseFloat(cb.getAttribute("data-price"));
                const id = cb.getAttribute("data-id");
                let qtyInput = document.querySelector(`input.quantity-input[data-for-id="${id}"]`);
                if (!qtyInput) {
                    qtyInput = document.querySelector(`input[name="quantities"][data-for-id="${id}"]`);
                }
                const qty = qtyInput ? parseInt(qtyInput.value) : 1;
                total += price * qty;
            });
            document.getElementById("tong-tien").textContent = total.toLocaleString('vi-VN') + " ₫";
        }

        // 3. nếu không chọn sp nào
        document.getElementById("checkoutForm").addEventListener("submit", function (e) {
            const selected = document.querySelectorAll(".chon-sp:checked");
            const form = this;

            if (selected.length === 0) {
                e.preventDefault();
                alert("Vui lòng chọn ít nhất một sản phẩm để tiến hành thanh toán.");
                return;
            }

            // Remove old quantity inputs to prevent duplication
            document.querySelectorAll("input[name='quantities']").forEach(el => el.remove());

            // nhập số lượng
            selected.forEach(cb => {
                const id = cb.value;
                const qtyInput = document.querySelector(`.quantity-input[data-for-id='${id}']`);
                const qty = qtyInput ? parseInt(qtyInput.value) : 1;

                const hiddenQty = document.createElement("input");
                hiddenQty.type = "hidden";
                hiddenQty.name = "quantities";
                hiddenQty.value = qty;
                form.appendChild(hiddenQty);
            });
        });

        // 4. tăg
        document.querySelectorAll(".btn-increase").forEach(btn => {
            btn.addEventListener("click", function () {
                const id = this.getAttribute("data-id");
                const input = document.querySelector(`input.quantity-input[data-for-id='${id}']`);
                if (!input) return;

                const current = parseInt(input.value);
                const stock = parseInt(input.getAttribute("data-stock"));

                if (current < stock) {
                    const newQty = current + 1;
                    input.value = newQty;
                    updateServerQuantity(id, newQty);
                } else {
                    alert("Đã đạt số lượng tối đa trong kho: " + stock);
                }
            });
        });

        // 5. giảm
        document.querySelectorAll(".btn-decrease").forEach(btn => {
            btn.addEventListener("click", function () {
                const id = this.getAttribute("data-id");
                const input = document.querySelector(`input.quantity-input[data-for-id='${id}']`);
                if (!input) return;

                const current = parseInt(input.value);

                if (current > 1) {
                    const newQty = current - 1;
                    input.value = newQty;
                    updateServerQuantity(id, newQty);
                } else {
                    alert("Số lượng tối thiểu là 1");
                }
            });
        });

        // 6. check số lượng kho
        document.querySelectorAll('.quantity-input').forEach(input => {
            input.addEventListener('change', function () {
                const id = this.getAttribute('data-for-id');
                const stock = parseInt(this.getAttribute('data-stock'));
                let value = parseInt(this.value);

                if (isNaN(value) || value < 1) {
                    value = 1;
                    alert("Số lượng tối thiểu là 1.");
                } else if (value > stock) {
                    value = stock;
                    alert("Số lượng vượt quá số lượng trong kho " + stock);
                }

                this.value = value;
                updateServerQuantity(id, value);
                updateTotal();
            });
        });

        // 7. Update số lượng
        function updateServerQuantity(id, quantity, callback) {
            const formData = new URLSearchParams();
            formData.append("shoeDetailId", id);
            formData.append("newQuantity", quantity);

            fetch('/Cart/UpdateQuantity', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                },
                body: formData.toString()
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        const input = document.querySelector(`input.quantity-input[data-for-id='${id}']`);
                        const totalCell = input?.closest('tr')?.querySelector('.shoping__cart__total');

                        if (totalCell) {
                            totalCell.textContent = data.newItemTotal.toLocaleString('vi-VN') + " ₫";
                        }

                        updateTotal();
                    } else {
                        alert(data.message);
                    }

                    callback && callback(data.success);
                })
                .catch(err => {
                    console.error("Lỗi khi cập nhật:", err);
                    alert("Có lỗi xảy ra khi cập nhật số lượng.");
                });
        }

        // 8. thông báo
        setTimeout(function () {
            const alert = document.querySelector(".alert");
            if (alert) {
                alert.classList.remove("show");
                alert.classList.add("fade");
                alert.style.opacity = 0;
                setTimeout(() => alert.remove(), 500);
            }
        }, 5000);

        // Initial total update
        updateTotal();
    </script>
}
// <auto-generated />
using System;
using AuthDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthDemo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250614061216_TenMigrationMoi")]
    partial class TenMigrationMoi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthDemo.Models.Admin", b =>
                {
                    b.Property<string>("HoTenAdmin")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AnhDaiDien")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("HoTenAdmin");

                    b.HasIndex("UserName");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            HoTenAdmin = "Admin Demo",
                            AnhDaiDien = "avatar.png",
                            DiaChi = "Hà Nội",
                            Email = "admin@gmail.com",
                            NgaySinh = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sdt = "0123456789",
                            UserName = "testuser"
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.AnhSp", b =>
                {
                    b.Property<Guid>("ID_AnhSp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileAnh")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid?>("ID_Spct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID_AnhSp");

                    b.HasIndex("ID_Spct");

                    b.ToTable("AnhSps");
                });

            modelBuilder.Entity("AuthDemo.Models.BaoCao", b =>
                {
                    b.Property<Guid>("ID_BaoCao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("DoanhThu")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("HoTenAdmin")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LoaiBaoCao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayBaoCao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SoKhachHangMoi")
                        .HasColumnType("int");

                    b.Property<int?>("SoKhachHangTroLai")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongDonHangBiHuy")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongDonHangDangXuLy")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongDonHangHoanThanh")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongHangBanRa")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongHangTon")
                        .HasColumnType("int");

                    b.Property<int?>("TongSoDonHang")
                        .HasColumnType("int");

                    b.Property<int?>("TongSoKhachHang")
                        .HasColumnType("int");

                    b.HasKey("ID_BaoCao");

                    b.HasIndex("HoTenAdmin");

                    b.ToTable("BaoCaos");
                });

            modelBuilder.Entity("AuthDemo.Models.ChatLieu", b =>
                {
                    b.Property<Guid>("ID_ChatLieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChatLieuName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_ChatLieu");

                    b.ToTable("ChatLieus");
                });

            modelBuilder.Entity("AuthDemo.Models.DonHang", b =>
                {
                    b.Property<Guid>("ID_Don_Hang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaNV")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID_Don_Hang");

                    b.HasIndex("MaNV");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("AuthDemo.Models.Don_Hang_Thanh_Toan", b =>
                {
                    b.Property<Guid>("ID_Don_Hang_Thanh_Toan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Don_Hang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_ThanhToan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KieuTT")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayTT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_Don_Hang_Thanh_Toan");

                    b.HasIndex("ID_Don_Hang");

                    b.HasIndex("ID_ThanhToan");

                    b.ToTable("Don_Hang_Thanh_Toans");
                });

            modelBuilder.Entity("AuthDemo.Models.GiaoHang", b =>
                {
                    b.Property<Guid>("ID_GiaoHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_Don_Hang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_ThanhToan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayPhanCongGiaoHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianDuKienGiaoHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianThucTeGiaoHang")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThaiGiaoHang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_GiaoHang");

                    b.HasIndex("ID_Don_Hang");

                    b.HasIndex("ID_ThanhToan");

                    b.ToTable("GiaoHangs");
                });

            modelBuilder.Entity("AuthDemo.Models.Gio_Hang", b =>
                {
                    b.Property<Guid>("ID_Gio_Hang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID_Gio_Hang");

                    b.HasIndex("ID_User");

                    b.ToTable("Gio_Hangs");
                });

            modelBuilder.Entity("AuthDemo.Models.Gio_Hang_Chi_Tiet", b =>
                {
                    b.Property<Guid>("ID_Gio_Hang_Chi_Tiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Gia")
                        .HasColumnType("real");

                    b.Property<Guid>("ID_Gio_Hang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Spct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Ma_Km")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("SoLuong")
                        .HasColumnType("real");

                    b.HasKey("ID_Gio_Hang_Chi_Tiet");

                    b.HasIndex("ID_Gio_Hang");

                    b.HasIndex("ID_Spct");

                    b.HasIndex("Ma_Km");

                    b.ToTable("Gio_Hang_Chi_Tiets");
                });

            modelBuilder.Entity("AuthDemo.Models.HangSX", b =>
                {
                    b.Property<Guid>("ID_Hang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HangSXName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_Hang");

                    b.ToTable("HangSXs");
                });

            modelBuilder.Entity("AuthDemo.Models.HoTroKhachHang", b =>
                {
                    b.Property<Guid>("ID_HoTroKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoaiHT")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("MaNV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PTLienLac")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_HoTroKhachHang");

                    b.HasIndex("ID_User");

                    b.HasIndex("MaNV");

                    b.ToTable("HoTroKhachHangs");
                });

            modelBuilder.Entity("AuthDemo.Models.HoaDon", b =>
                {
                    b.Property<Guid>("ID_HoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID_HoaDon");

                    b.HasIndex("ID_User");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("AuthDemo.Models.KhachHang", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DiemTichLuy")
                        .HasColumnType("int");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HoTenAdmin")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LoaiKhachHang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Email", "HoTen");

                    b.HasIndex("HoTenAdmin");

                    b.HasIndex("UserName");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("AuthDemo.Models.KhuyenMai", b =>
                {
                    b.Property<Guid>("Ma_Km")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaTriKm")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("HoTenAdmin")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LoaiKm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("NgayBd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuong1Ng")
                        .HasColumnType("int");

                    b.Property<string>("TenKm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Ma_Km");

                    b.HasIndex("HoTenAdmin");

                    b.ToTable("KhuyenMais");
                });

            modelBuilder.Entity("AuthDemo.Models.MauSac", b =>
                {
                    b.Property<Guid>("ID_MauSac")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MauSacName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_MauSac");

                    b.ToTable("MauSacs");
                });

            modelBuilder.Entity("AuthDemo.Models.NCC", b =>
                {
                    b.Property<Guid>("Ma_NCC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("HoTenAdmin")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameNCC")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NameNLH")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("QuocGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ThanhPho")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Ma_NCC");

                    b.HasIndex("HoTenAdmin");

                    b.ToTable("NCCs");
                });

            modelBuilder.Entity("AuthDemo.Models.NhanVien", b =>
                {
                    b.Property<Guid>("MaNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HoTenAdmin")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("HoTenNV")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("LuongCoBan")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayVaoLam")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SoGioLamViec")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaNV");

                    b.HasIndex("HoTenAdmin");

                    b.HasIndex("UserName");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("AuthDemo.Models.SanPham", b =>
                {
                    b.Property<Guid>("ID_Sp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SoLuongTong")
                        .HasColumnType("int");

                    b.Property<string>("Ten_Sp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID_Sp");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("AuthDemo.Models.SanPhamChiTiet", b =>
                {
                    b.Property<Guid>("ID_Spct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhDaiDien")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DanhGia")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<float>("Gia")
                        .HasColumnType("real");

                    b.Property<Guid?>("ID_ChatLieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_Hang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_MauSac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_Size")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Sp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SoLuongBan")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_Spct");

                    b.HasIndex("ID_ChatLieu");

                    b.HasIndex("ID_Hang");

                    b.HasIndex("ID_MauSac");

                    b.HasIndex("ID_Size");

                    b.HasIndex("ID_Sp");

                    b.ToTable("SanPhamChiTiets");
                });

            modelBuilder.Entity("AuthDemo.Models.SanPhamYeuThich", b =>
                {
                    b.Property<Guid>("ID_Spyt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID_Spyt");

                    b.HasIndex("ID_User");

                    b.ToTable("SanPhamYeuThiches");
                });

            modelBuilder.Entity("AuthDemo.Models.SanPhamYeuThichChiTiet", b =>
                {
                    b.Property<Guid>("ID_Spyt_Chi_Tiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Gia")
                        .HasColumnType("real");

                    b.Property<Guid>("ID_Spct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Spyt")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID_Spyt_Chi_Tiet");

                    b.HasIndex("ID_Spct");

                    b.HasIndex("ID_Spyt");

                    b.ToTable("SanPhamYeuThichChiTiets");
                });

            modelBuilder.Entity("AuthDemo.Models.SanPham_Mua", b =>
                {
                    b.Property<Guid>("ID_SP_Mua")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Gia")
                        .HasColumnType("real");

                    b.Property<Guid>("ID_Spct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Ma_Km")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("SoLuong")
                        .HasColumnType("real");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_SP_Mua");

                    b.HasIndex("ID_Spct");

                    b.HasIndex("Ma_Km");

                    b.HasIndex("UserName");

                    b.ToTable("SanPham_Muas");
                });

            modelBuilder.Entity("AuthDemo.Models.SanPham_ThanhToan", b =>
                {
                    b.Property<Guid>("ID_Sp_ThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Spct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_ThanhToan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("SoLuong")
                        .HasColumnType("real");

                    b.HasKey("ID_Sp_ThanhToan");

                    b.HasIndex("ID_Spct");

                    b.HasIndex("ID_ThanhToan");

                    b.ToTable("SanPham_ThanhToans");
                });

            modelBuilder.Entity("AuthDemo.Models.Size", b =>
                {
                    b.Property<Guid>("ID_Size")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_Size");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("AuthDemo.Models.ThanhToan", b =>
                {
                    b.Property<Guid>("ID_ThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("ID_HoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SDT")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float>("SoTienThanhToan")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_ThanhToan");

                    b.HasIndex("ID_HoaDon");

                    b.ToTable("ThanhToans");
                });

            modelBuilder.Entity("AuthDemo.Models.TonKho", b =>
                {
                    b.Property<Guid>("ID_TonKho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Spct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayCapNhap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongTonKho")
                        .HasColumnType("int");

                    b.HasKey("ID_TonKho");

                    b.HasIndex("ID_Spct");

                    b.ToTable("TonKhos");
                });

            modelBuilder.Entity("AuthDemo.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "testuser",
                            Password = "123456",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.User_KhachHang", b =>
                {
                    b.Property<Guid>("ID_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("KhachHangEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KhachHangHoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_User");

                    b.HasIndex("UserName");

                    b.HasIndex("KhachHangEmail", "KhachHangHoTen");

                    b.ToTable("User_KhachHangs");
                });

            modelBuilder.Entity("AuthDemo.Models.Admin", b =>
                {
                    b.HasOne("AuthDemo.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AuthDemo.Models.AnhSp", b =>
                {
                    b.HasOne("AuthDemo.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany()
                        .HasForeignKey("ID_Spct");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AuthDemo.Models.BaoCao", b =>
                {
                    b.HasOne("AuthDemo.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("HoTenAdmin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("AuthDemo.Models.DonHang", b =>
                {
                    b.HasOne("AuthDemo.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("AuthDemo.Models.Don_Hang_Thanh_Toan", b =>
                {
                    b.HasOne("AuthDemo.Models.DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("ID_Don_Hang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthDemo.Models.ThanhToan", "ThanhToan")
                        .WithMany()
                        .HasForeignKey("ID_ThanhToan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("ThanhToan");
                });

            modelBuilder.Entity("AuthDemo.Models.GiaoHang", b =>
                {
                    b.HasOne("AuthDemo.Models.DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("ID_Don_Hang");

                    b.HasOne("AuthDemo.Models.ThanhToan", "ThanhToan")
                        .WithMany()
                        .HasForeignKey("ID_ThanhToan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("ThanhToan");
                });

            modelBuilder.Entity("AuthDemo.Models.Gio_Hang", b =>
                {
                    b.HasOne("AuthDemo.Models.User_KhachHang", "User_KhachHang")
                        .WithMany()
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User_KhachHang");
                });

            modelBuilder.Entity("AuthDemo.Models.Gio_Hang_Chi_Tiet", b =>
                {
                    b.HasOne("AuthDemo.Models.Gio_Hang", "Gio_Hang")
                        .WithMany()
                        .HasForeignKey("ID_Gio_Hang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthDemo.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany()
                        .HasForeignKey("ID_Spct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthDemo.Models.KhuyenMai", "KhuyenMai")
                        .WithMany()
                        .HasForeignKey("Ma_Km");

                    b.Navigation("Gio_Hang");

                    b.Navigation("KhuyenMai");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AuthDemo.Models.HoTroKhachHang", b =>
                {
                    b.HasOne("AuthDemo.Models.User_KhachHang", "User_KhachHang")
                        .WithMany()
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthDemo.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("User_KhachHang");
                });

            modelBuilder.Entity("AuthDemo.Models.HoaDon", b =>
                {
                    b.HasOne("AuthDemo.Models.User_KhachHang", "User_KhachHang")
                        .WithMany()
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User_KhachHang");
                });

            modelBuilder.Entity("AuthDemo.Models.KhachHang", b =>
                {
                    b.HasOne("AuthDemo.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("HoTenAdmin");

                    b.HasOne("AuthDemo.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AuthDemo.Models.KhuyenMai", b =>
                {
                    b.HasOne("AuthDemo.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("HoTenAdmin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("AuthDemo.Models.NCC", b =>
                {
                    b.HasOne("AuthDemo.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("HoTenAdmin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("AuthDemo.Models.NhanVien", b =>
                {
                    b.HasOne("AuthDemo.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("HoTenAdmin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthDemo.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AuthDemo.Models.SanPhamChiTiet", b =>
                {
                    b.HasOne("AuthDemo.Models.ChatLieu", "ChatLieu")
                        .WithMany()
                        .HasForeignKey("ID_ChatLieu");

                    b.HasOne("AuthDemo.Models.HangSX", "HangSX")
                        .WithMany()
                        .HasForeignKey("ID_Hang");

                    b.HasOne("AuthDemo.Models.MauSac", "MauSac")
                        .WithMany()
                        .HasForeignKey("ID_MauSac");

                    b.HasOne("AuthDemo.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("ID_Size");

                    b.HasOne("AuthDemo.Models.SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("ID_Sp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatLieu");

                    b.Navigation("HangSX");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("AuthDemo.Models.SanPhamYeuThich", b =>
                {
                    b.HasOne("AuthDemo.Models.User_KhachHang", "User_KhachHang")
                        .WithMany()
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User_KhachHang");
                });

            modelBuilder.Entity("AuthDemo.Models.SanPhamYeuThichChiTiet", b =>
                {
                    b.HasOne("AuthDemo.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany()
                        .HasForeignKey("ID_Spct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthDemo.Models.SanPhamYeuThich", "SanPhamYeuThich")
                        .WithMany()
                        .HasForeignKey("ID_Spyt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPhamChiTiet");

                    b.Navigation("SanPhamYeuThich");
                });

            modelBuilder.Entity("AuthDemo.Models.SanPham_Mua", b =>
                {
                    b.HasOne("AuthDemo.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany()
                        .HasForeignKey("ID_Spct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthDemo.Models.KhuyenMai", "KhuyenMai")
                        .WithMany()
                        .HasForeignKey("Ma_Km")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthDemo.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuyenMai");

                    b.Navigation("SanPhamChiTiet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AuthDemo.Models.SanPham_ThanhToan", b =>
                {
                    b.HasOne("AuthDemo.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany()
                        .HasForeignKey("ID_Spct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthDemo.Models.ThanhToan", "ThanhToan")
                        .WithMany()
                        .HasForeignKey("ID_ThanhToan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPhamChiTiet");

                    b.Navigation("ThanhToan");
                });

            modelBuilder.Entity("AuthDemo.Models.ThanhToan", b =>
                {
                    b.HasOne("AuthDemo.Models.HoaDon", "HoaDon")
                        .WithMany()
                        .HasForeignKey("ID_HoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("AuthDemo.Models.TonKho", b =>
                {
                    b.HasOne("AuthDemo.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany()
                        .HasForeignKey("ID_Spct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AuthDemo.Models.User_KhachHang", b =>
                {
                    b.HasOne("AuthDemo.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AuthDemo.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangEmail", "KhachHangHoTen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using AuthDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthDemo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250708191330_UpdateModel")]
    partial class UpdateModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthDemo.Models.AnhGiay", b =>
                {
                    b.Property<Guid>("ImageShoeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DuongDanAnh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ShoeDetailID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImageShoeID");

                    b.HasIndex("ShoeDetailID");

                    b.ToTable("AnhGiays");

                    b.HasData(
                        new
                        {
                            ImageShoeID = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            DuongDanAnh = "/images/airmax1.jpg",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            ShoeDetailID = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb")
                        },
                        new
                        {
                            ImageShoeID = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            DuongDanAnh = "/images/airmax2.jpg",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            ShoeDetailID = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb")
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.ChatLieu", b =>
                {
                    b.Property<Guid>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaChatLieuCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenChatLieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaterialID");

                    b.ToTable("ChatLieus");

                    b.HasData(
                        new
                        {
                            MaterialID = new Guid("1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d"),
                            MaChatLieuCode = "CTN",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenChatLieu = "Cotton"
                        },
                        new
                        {
                            MaterialID = new Guid("8a9b0c1d-2e3f-4a5b-6c7d-8e9f0a1b2c3d"),
                            MaChatLieuCode = "LEN",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenChatLieu = "Len"
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.ChiTietGiay", b =>
                {
                    b.Property<Guid>("ShoeDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("MaterialID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ShoeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SizeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ShoeDetailID");

                    b.HasIndex("BrandID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ColorID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("ShoeID");

                    b.HasIndex("SizeID");

                    b.ToTable("ChiTietGiays");

                    b.HasData(
                        new
                        {
                            ShoeDetailID = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            BrandID = new Guid("55555555-5555-5555-5555-555555555555"),
                            CategoryID = new Guid("77777777-7777-7777-7777-777777777777"),
                            ColorID = new Guid("11111111-1111-1111-1111-111111111111"),
                            Gia = 2500000m,
                            MaterialID = new Guid("1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d"),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            ShoeID = new Guid("99999999-9999-9999-9999-999999999999"),
                            SizeID = new Guid("33333333-3333-3333-3333-333333333333"),
                            SoLuong = 10
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.ChiTietGioHang", b =>
                {
                    b.Property<Guid>("CartDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KichThuoc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ShoeDetailID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("CartDetailID");

                    b.HasIndex("CartID");

                    b.HasIndex("ShoeDetailID");

                    b.ToTable("ChiTietGioHangs");

                    b.HasData(
                        new
                        {
                            CartDetailID = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            CartID = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            KichThuoc = "M",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            ShoeDetailID = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            SoLuong = 2
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.ChiTietHoaDon", b =>
                {
                    b.Property<Guid>("BillDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ShoeDetailID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("BillDetailID");

                    b.HasIndex("BillID");

                    b.HasIndex("ShoeDetailID");

                    b.ToTable("ChiTietHoaDons");

                    b.HasData(
                        new
                        {
                            BillDetailID = new Guid("22223333-4444-5555-6666-777788889999"),
                            BillID = new Guid("11112222-3333-4444-5555-666677778888"),
                            DonGia = 2500000m,
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            ShoeDetailID = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            SoLuong = 1
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.DanhMuc", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaDanhMucCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryID");

                    b.ToTable("DanhMucs");

                    b.HasData(
                        new
                        {
                            CategoryID = new Guid("77777777-7777-7777-7777-777777777777"),
                            MaDanhMucCode = "SPORT",
                            MoTa = "Sản phẩm thể thao",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenDanhMuc = "Thể thao"
                        },
                        new
                        {
                            CategoryID = new Guid("88888888-8888-8888-8888-888888888888"),
                            MaDanhMucCode = "FASHION",
                            MoTa = "Sản phẩm thời trang",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenDanhMuc = "Thời trang"
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.DiaChi", b =>
                {
                    b.Property<Guid>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiDayDu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AddressID");

                    b.HasIndex("UserID");

                    b.ToTable("DiaChis");

                    b.HasData(
                        new
                        {
                            AddressID = new Guid("44445555-6666-7777-8888-9999aaaabbbb"),
                            DiaChiDayDu = "123 Đường ABC, Quận 1, TP.HCM",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            UserID = new Guid("11111111-1111-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.Giay", b =>
                {
                    b.Property<Guid>("ShoeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaGiayCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenGiay")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShoeID");

                    b.ToTable("Giays");

                    b.HasData(
                        new
                        {
                            ShoeID = new Guid("99999999-9999-9999-9999-999999999999"),
                            MaGiayCode = "AMX",
                            MoTa = "Giày thể thao Nike",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenGiay = "Air Max",
                            TrangThai = "Còn hàng"
                        },
                        new
                        {
                            ShoeID = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            MaGiayCode = "UBS",
                            MoTa = "Giày thể thao Adidas",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenGiay = "Ultraboost",
                            TrangThai = "Còn hàng"
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.GioHang", b =>
                {
                    b.Property<Guid>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartID");

                    b.HasIndex("UserID");

                    b.ToTable("GioHangs");

                    b.HasData(
                        new
                        {
                            CartID = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            UserID = new Guid("11111111-1111-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.HoaDon", b =>
                {
                    b.Property<Guid>("BillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DaHuy")
                        .HasColumnType("bit");

                    b.Property<bool>("DaThanhToan")
                        .HasColumnType("bit");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayGiaoHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BillID");

                    b.HasIndex("UserID");

                    b.ToTable("HoaDons");

                    b.HasData(
                        new
                        {
                            BillID = new Guid("11112222-3333-4444-5555-666677778888"),
                            DaHuy = false,
                            DaThanhToan = true,
                            DiaChi = "Hà Nội",
                            Email = "admin@example.com",
                            GhiChu = "",
                            HoTen = "Nguyễn Văn A",
                            LyDo = "",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            PhuongThucThanhToan = "Tiền mặt",
                            SoDienThoai = "0123456789",
                            TongTien = 5000000m,
                            TrangThai = "Đã thanh toán",
                            UserID = new Guid("11111111-1111-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.KichThuoc", b =>
                {
                    b.Property<Guid>("SizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaKichThuocCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenKichThuoc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SizeID");

                    b.ToTable("KichThuocs");

                    b.HasData(
                        new
                        {
                            SizeID = new Guid("33333333-3333-3333-3333-333333333333"),
                            MaKichThuocCode = "S",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenKichThuoc = "S"
                        },
                        new
                        {
                            SizeID = new Guid("44444444-4444-4444-4444-444444444444"),
                            MaKichThuocCode = "M",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenKichThuoc = "M"
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.LichSuHoaDon", b =>
                {
                    b.Property<Guid>("BillHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiCu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DiaChiMoi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThaiCu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThaiMoi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BillHistoryID");

                    b.HasIndex("BillID");

                    b.HasIndex("UserID");

                    b.ToTable("LichSuHoaDons");

                    b.HasData(
                        new
                        {
                            BillHistoryID = new Guid("33334444-5555-6666-7777-88889999aaaa"),
                            BillCode = "HD001",
                            BillID = new Guid("11112222-3333-4444-5555-666677778888"),
                            DiaChiCu = "Hà Nội",
                            DiaChiMoi = "Hồ Chí Minh",
                            GhiChu = "Chuyển địa chỉ giao hàng",
                            HoTen = "Nguyễn Văn A",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TrangThaiCu = "Chờ xác nhận",
                            TrangThaiMoi = "Đã thanh toán",
                            UserID = new Guid("11111111-1111-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.MauSac", b =>
                {
                    b.Property<Guid>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaMau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenMau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ColorID");

                    b.ToTable("MauSacs");

                    b.HasData(
                        new
                        {
                            ColorID = new Guid("11111111-1111-1111-1111-111111111111"),
                            MaMau = "RED",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenMau = "Đỏ"
                        },
                        new
                        {
                            ColorID = new Guid("22222222-2222-2222-2222-222222222222"),
                            MaMau = "BLUE",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenMau = "Xanh"
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.NguoiDung", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhDaiDien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHetHanToken")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserID");

                    b.ToTable("NguoiDungs");

                    b.HasData(
                        new
                        {
                            UserID = new Guid("11111111-1111-1111-1111-111111111111"),
                            AnhDaiDien = "admin.jpg",
                            Email = "admin@example.com",
                            HoTen = "Quản trị viên",
                            IsActive = true,
                            MatKhau = "OMadiOjAeYhAtMTjppvsDgOzcynJf9uc8ZC8/+0i1L8=",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            SoDienThoai = "0123456789",
                            TenDangNhap = "admin",
                            Token = "1234567890"
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.ThuongHieu", b =>
                {
                    b.Property<Guid>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaThuongHieuCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BrandID");

                    b.ToTable("ThuongHieus");

                    b.HasData(
                        new
                        {
                            BrandID = new Guid("55555555-5555-5555-5555-555555555555"),
                            MaThuongHieuCode = "NIKE",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenThuongHieu = "Nike"
                        },
                        new
                        {
                            BrandID = new Guid("66666666-6666-6666-6666-666666666666"),
                            MaThuongHieuCode = "ADIDAS",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenThuongHieu = "Adidas"
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.VaiTro", b =>
                {
                    b.Property<Guid>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleID");

                    b.ToTable("VaiTros");

                    b.HasData(
                        new
                        {
                            RoleID = new Guid("11111111-1111-1111-1111-111111111111"),
                            MoTa = "Quản trị viên",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenVaiTro = "admin"
                        },
                        new
                        {
                            RoleID = new Guid("22222222-2222-2222-2222-222222222222"),
                            MoTa = "Người dùng thường",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "system",
                            NguoiTao = "system",
                            TenVaiTro = "user"
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.VaiTroNguoiDung", b =>
                {
                    b.Property<Guid>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserRoleID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("VaiTroNguoiDungs");

                    b.HasData(
                        new
                        {
                            UserRoleID = new Guid("aaaa1111-1111-1111-1111-111111111111"),
                            RoleID = new Guid("22222222-2222-2222-2222-222222222222"),
                            UserID = new Guid("11111111-1111-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("AuthDemo.Models.AnhGiay", b =>
                {
                    b.HasOne("AuthDemo.Models.ChiTietGiay", "ChiTietGiay")
                        .WithMany("AnhGiays")
                        .HasForeignKey("ShoeDetailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AnhGiay_ChiTietGiay");

                    b.Navigation("ChiTietGiay");
                });

            modelBuilder.Entity("AuthDemo.Models.ChiTietGiay", b =>
                {
                    b.HasOne("AuthDemo.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("ChiTietGiays")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietGiay_ThuongHieu");

                    b.HasOne("AuthDemo.Models.DanhMuc", "DanhMuc")
                        .WithMany("ChiTietGiays")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietGiay_DanhMuc");

                    b.HasOne("AuthDemo.Models.MauSac", "MauSac")
                        .WithMany("ChiTietGiays")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietGiay_MauSac");

                    b.HasOne("AuthDemo.Models.ChatLieu", "ChatLieu")
                        .WithMany("ChiTietGiays")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietGiay_ChatLieu");

                    b.HasOne("AuthDemo.Models.Giay", "Giay")
                        .WithMany("ChiTietGiays")
                        .HasForeignKey("ShoeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietGiay_Giay");

                    b.HasOne("AuthDemo.Models.KichThuoc", "KichThuoc")
                        .WithMany("ChiTietGiays")
                        .HasForeignKey("SizeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietGiay_KichThuoc");

                    b.Navigation("ChatLieu");

                    b.Navigation("DanhMuc");

                    b.Navigation("Giay");

                    b.Navigation("KichThuoc");

                    b.Navigation("MauSac");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("AuthDemo.Models.ChiTietGioHang", b =>
                {
                    b.HasOne("AuthDemo.Models.GioHang", "GioHang")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietGioHang_GioHang");

                    b.HasOne("AuthDemo.Models.ChiTietGiay", "ChiTietGiay")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("ShoeDetailID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietGioHang_ChiTietGiay");

                    b.Navigation("ChiTietGiay");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("AuthDemo.Models.ChiTietHoaDon", b =>
                {
                    b.HasOne("AuthDemo.Models.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietHoaDon_HoaDon");

                    b.HasOne("AuthDemo.Models.ChiTietGiay", "ChiTietGiay")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("ShoeDetailID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietHoaDon_ChiTietGiay");

                    b.Navigation("ChiTietGiay");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("AuthDemo.Models.DiaChi", b =>
                {
                    b.HasOne("AuthDemo.Models.NguoiDung", "NguoiDung")
                        .WithMany("DiaChis")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DiaChi_NguoiDung");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("AuthDemo.Models.GioHang", b =>
                {
                    b.HasOne("AuthDemo.Models.NguoiDung", "NguoiDung")
                        .WithMany("GioHangs")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GioHang_NguoiDung");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("AuthDemo.Models.HoaDon", b =>
                {
                    b.HasOne("AuthDemo.Models.NguoiDung", "NguoiDung")
                        .WithMany("HoaDons")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HoaDon_NguoiDung");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("AuthDemo.Models.LichSuHoaDon", b =>
                {
                    b.HasOne("AuthDemo.Models.HoaDon", "HoaDon")
                        .WithMany("LichSuHoaDons")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LichSuHoaDon_HoaDon");

                    b.HasOne("AuthDemo.Models.NguoiDung", "NguoiDung")
                        .WithMany("LichSuHoaDons")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LichSuHoaDon_NguoiDung");

                    b.Navigation("HoaDon");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("AuthDemo.Models.VaiTroNguoiDung", b =>
                {
                    b.HasOne("AuthDemo.Models.VaiTro", "VaiTro")
                        .WithMany("VaiTroNguoiDungs")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VaiTroNguoiDung_VaiTro");

                    b.HasOne("AuthDemo.Models.NguoiDung", "NguoiDung")
                        .WithMany("VaiTroNguoiDungs")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VaiTroNguoiDung_NguoiDung");

                    b.Navigation("NguoiDung");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("AuthDemo.Models.ChatLieu", b =>
                {
                    b.Navigation("ChiTietGiays");
                });

            modelBuilder.Entity("AuthDemo.Models.ChiTietGiay", b =>
                {
                    b.Navigation("AnhGiays");

                    b.Navigation("ChiTietGioHangs");

                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("AuthDemo.Models.DanhMuc", b =>
                {
                    b.Navigation("ChiTietGiays");
                });

            modelBuilder.Entity("AuthDemo.Models.Giay", b =>
                {
                    b.Navigation("ChiTietGiays");
                });

            modelBuilder.Entity("AuthDemo.Models.GioHang", b =>
                {
                    b.Navigation("ChiTietGioHangs");
                });

            modelBuilder.Entity("AuthDemo.Models.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("LichSuHoaDons");
                });

            modelBuilder.Entity("AuthDemo.Models.KichThuoc", b =>
                {
                    b.Navigation("ChiTietGiays");
                });

            modelBuilder.Entity("AuthDemo.Models.MauSac", b =>
                {
                    b.Navigation("ChiTietGiays");
                });

            modelBuilder.Entity("AuthDemo.Models.NguoiDung", b =>
                {
                    b.Navigation("DiaChis");

                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");

                    b.Navigation("LichSuHoaDons");

                    b.Navigation("VaiTroNguoiDungs");
                });

            modelBuilder.Entity("AuthDemo.Models.ThuongHieu", b =>
                {
                    b.Navigation("ChiTietGiays");
                });

            modelBuilder.Entity("AuthDemo.Models.VaiTro", b =>
                {
                    b.Navigation("VaiTroNguoiDungs");
                });
#pragma warning restore 612, 618
        }
    }
}
